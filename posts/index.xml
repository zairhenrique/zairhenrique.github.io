<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ops, Dev</title>
    <link>https://zairhenrique.github.io/posts/</link>
    <description>Recent content in Posts on Ops, Dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Zair Henrique</copyright>
    <lastBuildDate>Sat, 24 Mar 2018 17:55:05 -0300</lastBuildDate>
    
	<atom:link href="https://zairhenrique.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Legacy Windows Services on Docker</title>
      <link>https://zairhenrique.github.io/posts/legacy-windows-on-docker/</link>
      <pubDate>Sat, 24 Mar 2018 17:55:05 -0300</pubDate>
      
      <guid>https://zairhenrique.github.io/posts/legacy-windows-on-docker/</guid>
      <description>Intro 
Docker and containers are a hot topic in the DevOps community and continue to grow. By now, you can run your containers on Azure, AWS without any prior infrastructure.
This post is about legacy services made before containers emerged and when/how to make them run on Docker.
When? You&amp;rsquo;ve probably asked yourself if you should port your legacy applications to run on Docker. In most scenarios, you shouldn&amp;rsquo;t.</description>
    </item>
    
  </channel>
</rss>